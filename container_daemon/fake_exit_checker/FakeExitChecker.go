// This file was generated by counterfeiter
package fake_exit_checker

import (
	"os/exec"
	"sync"

	"github.com/cloudfoundry-incubator/garden-linux/container_daemon"
)

type FakeExitChecker struct {
	CheckStub        func(cmd *exec.Cmd) (byte, error)
	checkMutex       sync.RWMutex
	checkArgsForCall []struct {
		cmd *exec.Cmd
	}
	checkReturns struct {
		result1 byte
		result2 error
	}
}

func (fake *FakeExitChecker) Check(cmd *exec.Cmd) (byte, error) {
	fake.checkMutex.Lock()
	fake.checkArgsForCall = append(fake.checkArgsForCall, struct {
		cmd *exec.Cmd
	}{cmd})
	fake.checkMutex.Unlock()
	if fake.CheckStub != nil {
		return fake.CheckStub(cmd)
	} else {
		return fake.checkReturns.result1, fake.checkReturns.result2
	}
}

func (fake *FakeExitChecker) CheckCallCount() int {
	fake.checkMutex.RLock()
	defer fake.checkMutex.RUnlock()
	return len(fake.checkArgsForCall)
}

func (fake *FakeExitChecker) CheckArgsForCall(i int) *exec.Cmd {
	fake.checkMutex.RLock()
	defer fake.checkMutex.RUnlock()
	return fake.checkArgsForCall[i].cmd
}

func (fake *FakeExitChecker) CheckReturns(result1 byte, result2 error) {
	fake.CheckStub = nil
	fake.checkReturns = struct {
		result1 byte
		result2 error
	}{result1, result2}
}

var _ container_daemon.ExitChecker = new(FakeExitChecker)
