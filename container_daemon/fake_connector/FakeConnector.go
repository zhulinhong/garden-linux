// This file was generated by counterfeiter
package fake_connector

import (
	"io"
	"sync"

	"github.com/cloudfoundry-incubator/garden-linux/container_daemon"
)

type FakeConnector struct {
	ConnectStub        func(msg interface{}) ([]io.ReadWriteCloser, error)
	connectMutex       sync.RWMutex
	connectArgsForCall []struct {
		msg interface{}
	}
	connectReturns struct {
		result1 []io.ReadWriteCloser
		result2 error
	}
}

func (fake *FakeConnector) Connect(msg interface{}) ([]io.ReadWriteCloser, error) {
	fake.connectMutex.Lock()
	fake.connectArgsForCall = append(fake.connectArgsForCall, struct {
		msg interface{}
	}{msg})
	fake.connectMutex.Unlock()
	if fake.ConnectStub != nil {
		return fake.ConnectStub(msg)
	} else {
		return fake.connectReturns.result1, fake.connectReturns.result2
	}
}

func (fake *FakeConnector) ConnectCallCount() int {
	fake.connectMutex.RLock()
	defer fake.connectMutex.RUnlock()
	return len(fake.connectArgsForCall)
}

func (fake *FakeConnector) ConnectArgsForCall(i int) interface{} {
	fake.connectMutex.RLock()
	defer fake.connectMutex.RUnlock()
	return fake.connectArgsForCall[i].msg
}

func (fake *FakeConnector) ConnectReturns(result1 []io.ReadWriteCloser, result2 error) {
	fake.ConnectStub = nil
	fake.connectReturns = struct {
		result1 []io.ReadWriteCloser
		result2 error
	}{result1, result2}
}

var _ container_daemon.Connector = new(FakeConnector)
